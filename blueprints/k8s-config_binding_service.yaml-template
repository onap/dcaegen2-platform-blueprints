# -*- indent-tabs-mode: nil -*- # vi: set expandtab:
#
# ============LICENSE_START====================================================
# =============================================================================
# Copyright (c) 2017-2018 AT&T Intellectual Property. All rights reserved.
# =============================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END======================================================

tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint installs the config binding service

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - {{ ONAPTEMPLATE_RAWREPOURL_org_onap_dcaegen2_platform_plugins_releases }}/k8splugin/1.4.3/k8splugin_types.yaml

inputs:

  cbs_image:
    description: Docker image for config binding service
    default: {{ ONAPTEMPLATE_DOCKERREGURL_org_onap_dcaegen2_releases }}/onap/org.onap.dcaegen2.platform.configbinding.app-app:2.2.3
  replicas:
    description: Number of instances to launch
    type: integer
    default: 1

node_templates:
  # Config binding service
  service-config-binding:
    type: dcae.nodes.ContainerizedPlatformComponent
    properties:
        name: 'config-binding-service'
        container_port: 10000
        image: { get_input: cbs_image }
        docker_config:
            healthcheck:
                type: "http"
                endpoint: "/healthcheck"
        replicas: {get_input: replicas}
        log_info:
            log_directory: "/opt/logs"
