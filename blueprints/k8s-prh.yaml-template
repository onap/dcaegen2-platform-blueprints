# -*- indent-tabs-mode: nil -*- # vi: set expandtab:
#
# ============LICENSE_START====================================================
# =============================================================================
# Copyright (c) 2018 AT&T Intellectual Property. All rights reserved.
# =============================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END======================================================

tosca_definitions_version: cloudify_dsl_1_3

imports:
  - "http://www.getcloudify.org/spec/cloudify/3.4/types.yaml"
  - {{ ONAPTEMPLATE_RAWREPOURL_org_onap_dcaegen2_platform_plugins_releases }}/k8splugin/1.4.2/k8splugin_types.yaml

inputs:
  aaiEnrichmentHost:
    type: string
    default: "aai.onap.svc.cluster.local"
  aaiEnrichmentPort:
    type: integer
    default: 8443
  aaiEnrichmentUser:
    type: string
    description: aai user name
    default: "AAI"
  aaiEnrichmentPasswd:
    type: string
    description: aai password
    default: "AAI"
  dmaap_host:
    type: string
    description: dmaap host
    default: message-router.onap.svc.cluster.local
  dmaap_port:
    type: integer
    description: dmaap port
    default: 3904
  dmaap_user:
    type: string
    description: dmap user name
    default: "admin"
  dmaap_passwd:
    type: string
    description: dmap password
    default: "admin"
  tag_version:
    type: string
    default: "{{ ONAPTEMPLATE_DOCKERREGURL_org_onap_dcaegen2_releases }}/onap/org.onap.dcaegen2.services.prh.prh-app-server:latest"
  replicas:
    type: integer
    description: number of instances
    default: 1 
node_templates:
  prh:             
    properties:
      application_config:
        dmaap.dmaapConsumerConfiguration.dmaapHostName: { get_input: dmaap_host }
        dmaap.dmaapConsumerConfiguration.dmaapPortNumber: { get_input: dmaap_port }
        dmaap.dmaapConsumerConfiguration.dmaapTopicName: "/events/unauthenticated.SEC_OTHER_OUTPUT"
        dmaap.dmaapConsumerConfiguration.dmaapProtocol: "http"
        dmaap.dmaapConsumerConfiguration.dmaapUserName: { get_input: dmaap_user }
        dmaap.dmaapConsumerConfiguration.dmaapUserPassword: { get_input: dmaap_passwd }
        dmaap.dmaapConsumerConfiguration.dmaapContentType: "application/json"
        dmaap.dmaapConsumerConfiguration.consumerId: "c12"
        dmaap.dmaapConsumerConfiguration.consumerGroup: "OpenDCAE-c12"
        dmaap.dmaapConsumerConfiguration.timeoutMS: -1
        dmaap.dmaapConsumerConfiguration.messageLimit: -1
        dmaap.dmaapProducerConfiguration.dmaapHostName: { get_input: dmaap_host }
        dmaap.dmaapProducerConfiguration.dmaapPortNumber: { get_input: dmaap_port }
        dmaap.dmaapProducerConfiguration.dmaapTopicName: "/events/unauthenticated.PNF_READY"
        dmaap.dmaapProducerConfiguration.dmaapProtocol: "http"
        dmaap.dmaapProducerConfiguration.dmaapUserName: { get_input: dmaap_user }
        dmaap.dmaapProducerConfiguration.dmaapUserPassword: { get_input: dmaap_passwd }
        dmaap.dmaapProducerConfiguration.dmaapContentType: "application/json"
        aai.aaiClientConfiguration.aaiHost: { get_input: aaiEnrichmentHost }
        aai.aaiClientConfigurationaaiHostPortNumber: { get_input: aaiEnrichmentPort }
        aai.aaiClientConfigurationaaiProtocol: "https"
        aai.aaiClientConfigurationaaiUserName: { get_input: aaiEnrichmentUser }
        aai.aaiClientConfigurationaaiUserPassword: { get_input: aaiEnrichmentPasswd }
        aai.aaiClientConfigurationaaiIgnoreSSLCertificateErrors: true
        aai.aaiClientConfigurationaaiBasePath: "/aai/v12"
        aai.aaiClientConfigurationaaiPnfPath: "/network/pnfs/pnf"    
      docker_config:
        healthcheck:
          endpoint: /heartbeat
          interval: 15s
          timeout: 1s
          type: http
      image:
        get_input: tag_version
      replicas: {get_input: replicas}
      name: 'dcae-prh'
      dns_name: 'dcae-prh'
      log_info:
        log_directory: "/opt/app/prh/logs"
    type: dcae.nodes.ContainerizedPlatformComponent
