#
# ============LICENSE_START====================================================
# =============================================================================
# Copyright (c) 2018 TechMahindra. All rights reserved.
# =============================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END======================================================

tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint deploys the UniversalVESAdapter(UVA) as a Docker container

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - https://nexus.onap.org/service/local/repositories/raw/content/org.onap.dcaegen2.platform.plugins/R3/k8splugin/1.4.4/k8splugin_types.yaml
  - https://nexus.onap.org/service/local/repositories/raw/content/org.onap.dcaegen2.platform.plugins/R2/dcaepolicyplugin/2.3.0/dcaepolicyplugin_types.yaml
  - https://nexus.onap.org/service/local/repositories/raw/content/org.onap.ccsdk.platform.plugins/type_files/pgaas/1.1.0/pgaas_types.yaml

inputs:
  universal_mapper_name:
    type: string
    default: 'dcaegen2-svc-mapper'
  dmaap_host:
    type: string
    default: message-router.onap.svc.cluster.local   
  dmaap_port:
    type: string
    default: "3904"
  redisHosts:
    type: string
    default: dcae-redis.onap.svc.cluster.local:6379
  tag_version:
    type: string
    default: "nexus3.onap.org:10001/onap/org.onap.dcaegen2.services.mapper.vesadapter.universalvesadaptor:latest"
  consul_host:
    type: string
    default: consul-server.onap.svc.cluster.local
  consul_port:
    type: string
    default: "8500"
  cbs_host:
    type: string
    default: "config-binding-service.onap.svc.cluster.local"
  cbs_port:
    type: string
    default: "10000"
  external_port:
    type: string
    description: Kubernetes node port on which CDAPgui is exposed
    default: "32042"
  

node_templates:
  universalvesadapter:
    type: dcae.nodes.ContainerizedServiceComponent
    properties:
        service_component_type: 
          get_input: universal_mapper_name
        docker_config: {}
        image:
          get_input: tag_version
        application_config:
            app_preferences:
                 collectors:
                     - {identifier: notification1-id,subscriberTopic: ONAP-COLLECTOR-RESTCONFTRAP,mapping-files: [{'defaultMappingFile-ONAP-COLLECTOR-RESTCONFTRAP':'<?xml version=''1.0'' encoding=''UTF-8''?><smooks-resource-list xmlns=''http://www.milyn.org/xsd/smooks-1.1.xsd'' xmlns:jb=''http://www.milyn.org/xsd/smooks/javabean-1.4.xsd'' xmlns:json=''http://www.milyn.org/xsd/smooks/json-1.1.xsd''><json:reader rootName=''vesevent'' keyWhitspaceReplacement=''-''><json:keyMap><json:key from=''date&amp;time'' to=''date-and-time'' /><\/json:keyMap><\/json:reader><jb:bean class=''org.onap.dcaegen2.ves.domain.ves7_0.VesEvent'' beanId=''vesEvent'' createOnElement=''vesevent''><jb:wiring property=''event'' beanIdRef=''event'' /><\/jb:bean><jb:bean class=''org.onap.dcaegen2.ves.domain.ves7_0.Event'' beanId=''event'' createOnElement=''vesevent''><jb:wiring property=''commonEventHeader'' beanIdRef=''commonEventHeader'' /><jb:wiring property=''pnfRegistrationFields'' beanIdRef=''pnfRegistrationFields'' /><\/jb:bean><jb:bean class=''org.onap.dcaegen2.ves.domain.ves7_0.CommonEventHeader'' beanId=''commonEventHeader'' createOnElement=''vesevent''><jb:expression property=''version''>org.onap.dcaegen2.ves.domain.ves7_0.CommonEventHeader.Version._4_0_1<\/jb:expression><jb:expression property=''eventType''>''pnfRegistration''<\/jb:expression><jb:expression property=''vesEventListenerVersion''>org.onap.dcaegen2.ves.domain.ves7_0.CommonEventHeader.VesEventListenerVersion._7_0_1<\/jb:expression><jb:expression property=''eventId'' execOnElement=''vesevent''>''registration_''+commonEventHeader.ts1<\/jb:expression><jb:expression property=''reportingEntityName''>''VESMapper''<\/jb:expression><jb:expression property=''domain''>org.onap.dcaegen2.ves.domain.ves7_0.CommonEventHeader.Domain.PNF_REGISTRATION<\/jb:expression><jb:expression property=''eventName'' execOnElement=''vesevent''>commonEventHeader.domain<\/jb:expression><jb:value property=''sequence'' data=''0'' default=''0'' decoder=''Long'' /><jb:expression property=''lastEpochMicrosec'' execOnElement=''vesevent''>commonEventHeader.ts1<\/jb:expression><jb:expression property=''startEpochMicrosec'' execOnElement=''vesevent''>commonEventHeader.ts1<\/jb:expression><jb:expression property=''priority''>org.onap.dcaegen2.ves.domain.ves7_0.CommonEventHeader.Priority.NORMAL<\/jb:expression><jb:value property=''sourceName'' data=''notification/message/target'' /><\/jb:bean><jb:bean class=''org.onap.dcaegen2.ves.domain.ves7_0.PnfRegistrationFields'' beanId=''pnfRegistrationFields'' createOnElement=''vesevent''><jb:expression property=''pnfRegistrationFieldsVersion''>org.onap.dcaegen2.ves.domain.ves7_0.PnfRegistrationFields.PnfRegistrationFieldsVersion._2_0<\/jb:expression><jb:value property=''serialNumber'' data=''notification/message/content/onu/sn'' /><\/jb:bean><\/smooks-resource-list>'}]}
        service_component_type: { get_input: universal_mapper_name }
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            max_wait: 3600          
            envs:
                DMAAPHOST:
                    { get_input: dmaap_host }
                MR_DEFAULT_PORT_NUMBER:
                    { get_input: dmaap_port }
                CONSUL_HOST:
                    { get_input: consul_host }
                CONFIG_BINDING_SERVICE: "config_binding_service"
            ports:
              - concat: ["11011:", { get_input: external_port }]
