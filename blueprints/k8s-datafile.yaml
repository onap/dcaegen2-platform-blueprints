
#description: Docker application to collect log file from PNF
#blueprint_version: 1.0.0
---
tosca_definitions_version: cloudify_dsl_1_3
description: Docker application to collect log file from PNF
imports:
- http://www.getcloudify.org/spec/cloudify/4.5.5/types.yaml
- plugin:k8splugin?version=>=3.4.3,<4.0.0
- plugin:dmaap?version=1.5.0
inputs:
  PM_MEAS_FILES_feed0_location:
    type: string
    default: "loc00"
  cert_directory:
    type: string
    default: "/opt/app/datafile/etc/cert/"
  datafile-collector_cpu_limit:
    type: string
    default: "500m"
  datafile-collector_cpu_request:
    type: string
    default: "500m"
  datafile-collector_memory_limit:
    type: string
    default: "768Mi"
  datafile-collector_memory_request:
    type: string
    default: "768Mi"
  envs:
    default: {}
  external_port:
    type: string
    default: ":0"
  feed0_name:
    type: string
    default: "bulk_pm_feed"
  topic_name:
    type: string
    default: "unauthenticated.VES_NOTIFICATION_OUTPUT"
  consumer_group:
    type: string
    default: "OpenDcae-c12"
  consumer_id:
    type: string
    default: "C12"
  log_directory:
    type: string
    default: "/var/log/ONAP"
  replicas:
    type: integer
    description: number of instances
    default: 1
  tag_version:
    type: string
    default: "nexus3.onap.org:10001/onap/org.onap.dcaegen2.collectors.datafile.datafile-app-server:1.5.5"
  use_tls:
    type: boolean
    default: true
  external_cert_ca_name:
    type: string
    description: Name of Certificate Authority configured on CertService side.
    default: "RA"
  external_cert_cert_type:
    type: string
    description: Format of provided certificates
    default: "P12"
  external_cert_common_name:
    type: string
    description: Common name which should be present in certificate.
    default: "dcae-datafile-collector"
  external_cert_sans:
    type: string
    description: '"List of Subject Alternative Names (SANs) which should be present
      in certificate. Delimiter - , Should contain common_name value and other FQDNs
      under which given component is accessible."'
    default: "dcae-datafile-collector,datafile-collector,datafile"
  external_cert_use_external_tls:
    type: boolean
    description: Flag to indicate external tls enable/disable.
    default: false
node_templates:
  datafile-collector:
    type: dcae.nodes.ContainerizedServiceComponentUsingDmaap
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            envs:
              get_input: envs
    properties:
      application_config:
        service_calls: []
        streams_publishes:
          PM_MEAS_FILES:
            dmaap_info: <<feed0>>
            type: data_router
        dmaap.certificateConfig.keyCert: /opt/app/datafile/etc/cert/cert.p12
        dmaap.certificateConfig.keyPasswordPath: /opt/app/datafile/etc/cert/p12.pass
        dmaap.certificateConfig.trustedCa: /opt/app/datafile/etc/cert/trust.jks
        dmaap.certificateConfig.trustedCaPasswordPath: /opt/app/datafile/etc/cert/trust.pass
        dmaap.security.enableDmaapCertAuth: true
        dmaap.security.keyStorePasswordPath: /opt/app/datafile/etc/cert/jks.pass
        dmaap.security.keyStorePath: /opt/app/datafile/etc/cert/cert.jks
        dmaap.security.trustStorePasswordPath: /opt/app/datafile/etc/cert/trust.pass
        dmaap.security.trustStorePath: /opt/app/datafile/etc/cert/trust.jks
        dmaap.dmaapConsumerConfiguration.consumerGroup:
          get_input: consumer_group
        dmaap.dmaapConsumerConfiguration.consumerId:
          get_input: consumer_id
        dmaap.dmaapConsumerConfiguration.timeoutMs: -1
        sftp.security.strictHostKeyChecking: true
        streams_subscribes:
          dmaap_subscriber:
            type: message_router
            dmaap_info:
              topic_url: { concat: ['https://message-router:3905/events/',{ get_input: topic_name }] }
      docker_config:
        healthcheck:
          interval: 15s
          timeout: 1s
          type: http
          endpoint: /heartbeat
        ports:
        - concat: ["8100", {get_input: external_port}]
        - concat: ["8433", {get_input: external_port}]
      image:
        get_input: tag_version
      service_component_type: datafile-collector
      log_info:
        log_directory:
          get_input: log_directory
      replicas:
        get_input: replicas
      streams_publishes:
      - name: feed0
        location:
          get_input: PM_MEAS_FILES_feed0_location
        type: data_router
      tls_info:
        cert_directory:
          get_input: cert_directory
        use_tls:
          get_input: use_tls
      external_cert:
        external_cert_directory:
          get_input: cert_directory
        use_external_tls:
          get_input: external_cert_use_external_tls
        ca_name:
          get_input: external_cert_ca_name
        cert_type:
          get_input: external_cert_cert_type
        external_certificate_parameters:
          common_name:
            get_input: external_cert_common_name
          sans:
            get_input: external_cert_sans
      resource_config:
        limits:
          cpu:
            get_input: datafile-collector_cpu_limit
          memory:
            get_input: datafile-collector_memory_limit
        requests:
          cpu:
            get_input: datafile-collector_cpu_request
          memory:
            get_input: datafile-collector_memory_request
    relationships:
    - type: dcaegen2.relationships.publish_files
      target: feed0
  feed0:
    type: dcaegen2.nodes.Feed
    properties:
      feed_name:
        get_input: feed0_name
      useExisting: true
